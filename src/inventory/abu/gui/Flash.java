/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.abu.gui;

import inventory.abu.model.KoneksiDB;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

/**
 *
 * @author Abu Khoerul I A
 */
public class Flash extends javax.swing.JDialog {
    Timer timer;
    ActionListener action;
    FrmLogin lg;
    KoneksiDB db = new KoneksiDB();

    /**
     * Creates new form Flash
     */
    public Flash(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        jLabel1.setText(null);
        act();
        timer = new Timer(100, action);
        timer.start();
        tam n = new tam();
        n.start();
        
      

    
}
    public class tim extends Thread{
        @Override
        public void run(){
            try{
                for(int u=0; u<=5; u++){
                    System.out.print(u);
                    Thread.sleep(400);
                }
                FrmLogin lg = new FrmLogin();
                getToolkit().beep();
                lg.setVisible(true);
                dispose();
            }catch(Exception x){
                x.printStackTrace();
            }
        }
        
    }
     public class tam extends Thread{
        @Override
        public void run(){
            try{
                for(int u=0; u<=100; u++){
                    jLabel2.setText(String.valueOf("Loading..."+u+"%"));
                    Thread.sleep(100);
                }
            }catch(Exception x){
                x.printStackTrace();
            }
        }
        
    }
    


 
            
//To change body of generated methods, choose Tools | Templates.
    
  
    
   
        
      
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 166, 240, 10));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 240, 10));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/abu/icon/images.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 260, 190));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Flash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Flash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Flash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Flash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Flash dialog = new Flash(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables

    private void act() {
        //To change body of generated methods, choose Tools | Templates.
        action = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                 //To change body of generated methods, choose Tools | Templates.
                  
                 jProgressBar1.setValue(jProgressBar1.getValue()+1);
                 jProgressBar1.setStringPainted(true);
                 jProgressBar1.setForeground(Color.red);
                 jProgressBar1.setString("Checking...");
                 
                       
                        if((db.AmbilKoneksi()== null) && (jProgressBar1.getValue() == 5)){
                         jProgressBar1.setString("Error !!");
                         jLabel2.setText("Database tidak ditemukan !!");
                         timer.stop();
                        }else{
                             tim t = new tim();
                            if(jProgressBar1.getValue() == 100){
                                jProgressBar1.setString("Done...");
                                jLabel2.setText("Starting...");
                                timer.stop();
                                 t.start();
                                
                                
                                
                                                
                            }
                            
                            
                            
                             
                        }
                        
         
 
            
        }
           
                
        };
        
        
      
        
    }
}
